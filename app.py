from flask import Flask, request, jsonify
import requests
import json
import gzip
import io
import os
import time

app = Flask(__name__)
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
API_TOKEN = "YXNwZWN0"  # –í–∞—à —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω
PHONE_INDEX = None       # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –Ω–∞—à–∞ –±–∞–∑–∞ –Ω–æ–º–µ—Ä–æ–≤
LOAD_TIME = None         # –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã

def load_index():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –±–∞–∑—É –Ω–æ–º–µ—Ä–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    global PHONE_INDEX, LOAD_TIME
    
    print("üì• –ó–∞–≥—Ä—É–∂–∞—é –±–∞–∑—É –Ω–æ–º–µ—Ä–æ–≤...")
    start_time = time.time()
    
    # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® REAL FILE ID –° GOOGLE DRIVE
    google_drive_url = "https://drive.google.com/uc?export=download&id=1QqkEINOehMyzei27M3m_gGHWc_IJ3gVM"
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª —Å Google Drive
        response = requests.get(google_drive_url, timeout=60)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏ HTTP
        
        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–∂–∞—Ç—ã–π JSON
        compressed_data = io.BytesIO(response.content)
        with gzip.open(compressed_data, 'rt', encoding='utf-8') as file:
            PHONE_INDEX = json.load(file)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
        LOAD_TIME = time.time() - start_time
        print(f"‚úÖ –ë–∞–∑–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∑–∞ {LOAD_TIME:.1f} —Å–µ–∫—É–Ω–¥! –ó–∞–ø–∏—Å–µ–π: {len(PHONE_INDEX):,}")
        
    except Exception as error:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã: {error}")
        PHONE_INDEX = {}  # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –±–∞–∑—É –ø—Ä–∏ –æ—à–∏–±–∫–µ

def clean_phone_number(phone_str):
    """–û—á–∏—â–∞–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤"""
    digits = ''.join(filter(str.isdigit, phone_str))  # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    
    if len(digits) == 10:
        return '7' + digits  # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
    elif len(digits) > 11:
        return digits[:11]   # –û–±—Ä–µ–∑–∞–µ–º –¥–æ 11 —Ü–∏—Ñ—Ä
    
    return digits

@app.route('/')
def home_page():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π"""
    return """
    <h1>üîç API –¥–ª—è –ø–æ–∏—Å–∫–∞</h1>"""

@app.route('/search', methods=['POST'])
def search_phone():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    request_start_time = time.time()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø—Ä–æ—Å –∏–º–µ–Ω–Ω–æ POST
    if request.method != 'POST':
        return jsonify({
            "success": False,
            "error": "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ POST –∑–∞–ø—Ä–æ—Å",
            "example": {
                "phone": "71234567890",
                "token": "unknown"
            }
        }), 405  # 405 = Method Not Allowed
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    if not request.json:
        return jsonify({
            "success": False,
            "error": "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON",
            "example": {
                "phone": "71234567890", 
                "token": "unknown"
            }
        }), 400  # 400 = Bad Request
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    request_data = request.json
    phone_input = request_data.get('phone')
    token_input = request_data.get('token')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if not phone_input:
        return jsonify({
            "success": False,
            "error": "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            "required_fields": ["phone", "token"]
        }), 400
    
    if not token_input:
        return jsonify({
            "success": False, 
            "error": "–£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞",
            "required_fields": ["phone", "token"]
        }), 400
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    if token_input != API_TOKEN:
        return jsonify({
            "success": False,
            "error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞"
        }), 401  # 401 = Unauthorized
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∞–∑–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
    if not PHONE_INDEX:
        return jsonify({
            "success": False,
            "error": "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
        }), 503  # 503 = Service Unavailable
    
    # –û—á–∏—â–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    clean_phone = clean_phone_number(phone_input)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞
    if len(clean_phone) != 11:
        return jsonify({
            "success": False,
            "error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞",
            "provided": phone_input,
            "cleaned": clean_phone,
            "required_format": "11 —Ü–∏—Ñ—Ä (79991234567)"
        }), 400
    
    # –ò—â–µ–º –Ω–æ–º–µ—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    search_start_time = time.time()
    
    if clean_phone in PHONE_INDEX:
        # –ù–æ–º–µ—Ä –Ω–∞–π–¥–µ–Ω!
        record_data = PHONE_INDEX[clean_phone]
        search_duration = (time.time() - search_start_time) * 1000
        total_duration = (time.time() - request_start_time) * 1000
        
        return jsonify({
            "success": True,
            "status": "–ù–ê–ô–î–ï–ù–û",
            "data": {
                "phone": clean_phone,
                "name": record_data.get('n', ''),
                "email": record_data.get('e', '')
            },
            "timing": {
                "search_ms": round(search_duration, 2),
                "total_ms": round(total_duration, 2)
            }
        })
    
    else:
        # –ù–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
        search_duration = (time.time() - search_start_time) * 1000
        total_duration = (time.time() - request_start_time) * 1000
        
        return jsonify({
            "success": True,
            "status": "–ù–ï_–ù–ê–ô–î–ï–ù–û",
            "data": {
                "phone": clean_phone
            },
            "timing": {
                "search_ms": round(search_duration, 2),
                "total_ms": round(total_duration, 2)
            }
        })

@app.route('/status', methods=['POST'])
def get_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API"""
    if not request.json or request.json.get('token') != API_TOKEN:
        return jsonify({
            "success": False,
            "error": "–¢–æ–∫–µ–Ω —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞"
        }), 401
    
    return jsonify({
        "success": True,
        "status": "online",
        "statistics": {
            "records": len(PHONE_INDEX),
            "load_time_sec": round(LOAD_TIME, 2) if LOAD_TIME else 0,
            "memory_mb": len(str(PHONE_INDEX).encode('utf-8')) // 1024 // 1024 if PHONE_INDEX else 0
        }
    })

# –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
load_index()

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)